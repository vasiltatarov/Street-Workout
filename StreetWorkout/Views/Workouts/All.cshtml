@using StreetWorkout.Infrastructure
@model WorkoutsQueryModel
@{
    ViewData["Title"] = "Workouts";
}

@if (Model.IsUserTrainer)
{
    <div class="text-center">
        <a asp-controller="Workouts" asp-action="Create" class="btn btn-info">Create Workout</a>
    </div>
    <br />
}

<form>
    <div class="form-row">
        <div class="form-group col-md-6">
            <label asp-for="Sport"></label>
            <select asp-for="Sport" class="form-control">
                <option value="">Search by Sport</option>
                @foreach (var sport in Model.Sports)
                {
                    <option value="@sport">@sport</option>
                }
            </select>
        </div>
        <div class="form-group col-md-6">
            <label asp-for="BodyPart"></label>
            <select asp-for="BodyPart" class="form-control">
                <option value="">Search by Body Part</option>
                @foreach (var bodyPart in Model.BodyParts)
                {
                    <option value="@bodyPart">@bodyPart</option>
                }
            </select>
        </div>
    </div>
    <div class="form-group">
        <label asp-for="SearchTerms"></label>
        <input asp-for="SearchTerms" class="form-control" placeholder="Search by Title and Content.">
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>
<hr/>

<partial name="_WorkoutsPartial" model="Model.Workouts"/>
<hr/>

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }
    var maxPage = (int)Math.Ceiling((double)Model.TotalWorkouts / WorkoutsQueryModel.WorkoutsPerPage);
}

<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : string.Empty)">
            <a class="page-link"
               asp-controller="Workouts"
               asp-action="All"
               asp-route-sport="@Model.Sport"
               asp-route-bodyPart="@Model.BodyPart"
               asp-route-searchTerms="@Model.SearchTerms"
               asp-route-currentPage="@previousPage">
                Previous
            </a>
        </li>
        @if ((Model.CurrentPage - 1) > 1)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-controller="Workouts"
                   asp-action="All"
                   asp-route-sport="@Model.Sport"
                   asp-route-bodyPart="@Model.BodyPart"
                   asp-route-searchTerms="@Model.SearchTerms"
                   asp-route-currentPage="@(Model.CurrentPage - 2)">
                    @(Model.CurrentPage - 2)
                </a>
            </li>
        }
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link"
                   asp-controller="Workouts"
                   asp-action="All"
                   asp-route-sport="@Model.Sport"
                   asp-route-bodyPart="@Model.BodyPart"
                   asp-route-searchTerms="@Model.SearchTerms"
                   asp-route-currentPage="@(Model.CurrentPage - 1)">
                    @(Model.CurrentPage - 1)
                </a>
            </li>
        }
        <li class="page-item active disabled">
            <a class="page-link"
               asp-controller="Workouts"
               asp-action="All"
               asp-route-sport="@Model.Sport"
               asp-route-bodyPart="@Model.BodyPart"
               asp-route-searchTerms="@Model.SearchTerms"
               asp-route-currentPage="@Model.CurrentPage">
                @Model.CurrentPage
            </a>
        </li>
        @if (Model.CurrentPage != maxPage)
        {
            <li class="page-item @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)">
                <a class="page-link"
                   asp-controller="Workouts"
                   asp-action="All"
                   asp-route-sport="@Model.Sport"
                   asp-route-bodyPart="@Model.BodyPart"
                   asp-route-searchTerms="@Model.SearchTerms"
                   asp-route-currentPage="@(Model.CurrentPage + 1)">
                    @(Model.CurrentPage + 1)
                </a>
            </li>
        }
        @if ((Model.CurrentPage + 1) < maxPage)
        {
            <li class="page-item @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)">
                <a class="page-link"
                   asp-controller="Workouts"
                   asp-action="All"
                   asp-route-sport="@Model.Sport"
                   asp-route-bodyPart="@Model.BodyPart"
                   asp-route-searchTerms="@Model.SearchTerms"
                   asp-route-currentPage="@(Model.CurrentPage + 2)">
                    @(Model.CurrentPage + 2)
                </a>
            </li>
        }
        <li class="page-item @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)">
            <a class="page-link"
               asp-controller="Workouts"
               asp-action="All"
               asp-route-sport="@Model.Sport"
               asp-route-bodyPart="@Model.BodyPart"
               asp-route-searchTerms="@Model.SearchTerms"
               asp-route-currentPage="@(Model.CurrentPage + 1)">
                Next
            </a>
        </li>
    </ul>
</nav>