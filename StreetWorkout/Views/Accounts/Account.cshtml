@model AccountViewModel
@{
    this.ViewData["Title"] = this.Model.Username;
}

<style>
    .checked {
        color: orange;
    }
</style>

<div class="container">
    @if (this.User.Identity.Name == this.Model.Username)
    {
        @if (this.Model.IsAccountComplete)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                    <span aria-hidden="true">×</span>
                </button>
                <i class="fa fa-check"></i>
                <strong>Yay!</strong> Everything is fine! Your account is completely finished.
            </div>
        }
        else
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <i class="fa fa-exclamation-circle"></i>
                <strong>Hey!</strong> Your account is not completed
                <a asp-controller="Accounts" asp-action="CompleteAccount">click here.</a> to complete your account. This will unlock more options for you.
            </div>
        }
    }

    @if (this.Model.IsTrainer)
    {
        <h2>Star Rating</h2>
        <span class="fa fa-star checked" data-vote="1"></span>
        <span class="fa fa-star checked" data-vote="2"></span>
        <span class="fa fa-star checked" data-vote="3"></span>
        <span class="fa fa-star checked" data-vote="4"></span>
        <span class="fa fa-star checked" data-vote="5"></span>
        <span>&nbsp; <b id="avg-vote-rating">@Model.VotesAverageValue.ToString("F1")</b></span><span> / <b>5</b></span>
        <hr />
    }

    <div class="info">
        <div class="row">
            <div class="col-12 col-md-6 text-center">
                <img src="@this.Model.ImageUrl" alt="Raised circle image" class="img-fluid shadow-lg" style="width: 100%; height: 400px;">
            </div>
            <div class="col-12 col-md-6 d-flex flex-column align-items-center align-items-lg-start">
                <p class="lead mb-0 mt-2">Username: <b>@this.Model.Username</b></p>
                <p class="lead mb-0 mt-2">Title: <b>@(this.Model.IsTrainer ? "Trainer" : "Enthusiast")</b></p>
                <p class="lead mb-0 mt-2">Country: <b>@this.Model.Country</b></p>
                <p class="lead mb-0 mt-2">City: <b>@this.Model.City</b></p>
                <p class="lead mb-0 mt-2">Gender: <b>@this.Model.Gender</b></p>
                <p class="lead mb-0 mt-2">Age: <b>@this.Model.Age years</b></p>
                @if (this.Model.Data != null)
                {
                    <p class="lead mb-0 mt-2">Sport: <b>@this.Model.Data.Sport</b></p>
                    <p class="lead mb-0 mt-2">Goal: <b>@this.Model.Data.Goal</b></p>
                    <p class="lead mb-0 mt-2">Training Frequency: <b>@this.Model.Data.TrainingFrequency</b></p>
                    <p class="lead mb-0 mt-2">Weight: <b>@this.Model.Data.Weight kg</b></p>
                    <p class="lead mb-0 mt-2">Height: <b>@this.Model.Data.Height cm</b></p>
                    <p class="lead mb-0 mt-2">Description: <b>@this.Model.Data.Description</b></p>
                }
                else
                {
                    <br />
                    <p class="lead mb-0 mt-2"><b>Cannot see other data, because this account is not completed.</b></p>
                }
            </div>
        </div>
    </div>
</div>

<form method="post" id="antiForgeryForm"></form>

@section Scripts {
    <script>
        $("span[data-vote]").each(function(el) {
            $(this).click(function() {
                var value = $(this).attr("data-vote");
                var userId = '@Model.Id';
                var antiForgeryToken = $("#antiForgeryForm input[name=__RequestVerificationToken]").val();
                var data = { userId: userId, value: value };

                $.ajax({
                    type: "POST",
                    url: "/api/votes",
                    data: JSON.stringify(data),
                    headers: {
                        "X-CSRF-TOKEN": antiForgeryToken
                    },
                    success: function (data) {
                        $("#avg-vote-rating").html(data.averageVotes.toFixed(1));
                    },
                    contentType: "application/json"
                });
            });
        });
    </script>
}
