@model AllUsersQueryModel
@{
    ViewData["Title"] = "Trainers";
}

<div class="container">

    <form>
        <div class="form-row">
            <div class="form-group col-md-4">
                <label asp-for="Role"></label>
                <select asp-for="Role" class="form-control">
                    <option selected="" value="">--- All ---</option>
                    <option value="trainers">Trainers</option>
                    <option value="enthusiasts">Enthusiasts</option>
                </select>
            </div>
            <div class="form-group col-md-8">
                <label asp-for="Sport"></label>
                <select asp-for="Sport" class="form-control">
                    <option value="">--- Search by Sport ---</option>
                    @foreach (var sport in Model.Sports)
                    {
                        <option value="@sport.Name">@sport.Name</option>
                    }
                </select>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Search</button>
        <hr />
    </form>

    <div class="row">
        @foreach (var trainer in Model.Users)
        {
            var isStarChecked = (int)Math.Floor(trainer.VotesAverageValue);
            <div class="col-sm-6 col-md-4 mb-4">
                <div class="component">
                    <div class="card">
                        <div class="card-header">
                            <img class="card-img workout-img" src="@trainer.ImageUrl" alt="@trainer.Username">
                        </div>
                        <div class="card-body">
                            <span class="badge badge-success mb-2">@(trainer.IsTrainer ? "Trainer" : "Enthusiast")</span>
                            <h4 class="card-title">@trainer.Username</h4>
                            <p class="card-text">Sport: <b>@trainer.Sport</b></p>
                            @if (trainer.IsTrainer)
                            {
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <span class="fa fa-star @(isStarChecked >= i ? "star-checked" : "")" data-vote="@i"></span>
                                }
                                <span>&nbsp; <b id="avg-vote-rating">@trainer.VotesAverageValue.ToString("F1")</b></span><span> / <b>5</b></span>
                            }
                            else
                            {
                                <p class="card-text">Rate: <b>Cannot Be Rate</b></p>
                            }
                        </div>
                        <div class="card-footer">
                            <a asp-controller="Accounts" asp-action="Account" asp-route-username="@trainer.Username" class="btn btn-primary">View More</a>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <hr />

    @{
        var previousPage = Model.CurrentPage - 1;
        if (previousPage < 1)
        {
            previousPage = 1;
        }
        var maxPage = (int)Math.Ceiling((double)Model.TotalUsers / AllUsersQueryModel.TrainersPerPage);
        if (maxPage == 0)
        {
            maxPage = 1;
        }
    }

    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : string.Empty)">
                <a class="page-link"
                   asp-controller="Trainers"
                   asp-action="All"
                   asp-route-currentPage="@previousPage"
                   asp-route-role="@Model.Role"
                   asp-route-sport="@Model.Sport">
                    Previous
                </a>
            </li>
            @if ((Model.CurrentPage - 1) > 1)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-controller="Trainers"
                       asp-action="All"
                       asp-route-currentPage="@(Model.CurrentPage - 2)"
                       asp-route-role="@Model.Role"
                       asp-route-sport="@Model.Sport">
                        @(Model.CurrentPage - 2)
                    </a>
                </li>
            }
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-controller="Trainers"
                       asp-action="All"
                       asp-route-currentPage="@(Model.CurrentPage - 1)"
                       asp-route-role="@Model.Role"
                       asp-route-sport="@Model.Sport">
                        @(Model.CurrentPage - 1)
                    </a>
                </li>
            }
            <li class="page-item active disabled">
                <a class="page-link"
                   asp-controller="Trainers"
                   asp-action="All"
                   asp-route-currentPage="@Model.CurrentPage"
                   asp-route-role="@Model.Role"
                   asp-route-sport="@Model.Sport">
                    @Model.CurrentPage
                </a>
            </li>
            @if (Model.CurrentPage < maxPage)
            {
                <li class="page-item @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)">
                    <a class="page-link"
                       asp-controller="Trainers"
                       asp-action="All"
                       asp-route-currentPage="@(Model.CurrentPage + 1)"
                       asp-route-role="@Model.Role"
                       asp-route-sport="@Model.Sport">
                        @(Model.CurrentPage + 1)
                    </a>
                </li>
            }
            @if ((Model.CurrentPage + 1) < maxPage)
            {
                <li class="page-item @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)">
                    <a class="page-link"
                       asp-controller="Trainers"
                       asp-action="All"
                       asp-route-currentPage="@(Model.CurrentPage + 2)"
                       asp-route-role="@Model.Role"
                       asp-route-sport="@Model.Sport">
                        @(Model.CurrentPage + 2)
                    </a>
                </li>
            }
            <li class="page-item @(Model.CurrentPage == maxPage ? "disabled" : string.Empty)">
                <a class="page-link"
                   asp-controller="Trainers"
                   asp-action="All"
                   asp-route-currentPage="@(Model.CurrentPage + 1)"
                   asp-route-role="@Model.Role"
                   asp-route-sport="@Model.Sport">
                    Next
                </a>
            </li>
        </ul>
    </nav>
</div>